buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1")
    }
}

ext {
    springBootVersion = '2.1.4.RELEASE'
}

apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'signing'

version = '0.2.0'
group = 'eu.hinsch'

jar {
    baseName = 'spring-boot-actuator-user-agent-metrics'
    version = project.version
}
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

bootJar.enabled false
jar.enabled true

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("net.sf.uadetector:uadetector-resources:2014.04")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
}

compileJava.dependsOn(processResources)

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full" // show assertion errors in build
    }
}

wrapper {
    gradleVersion = '5.6.1'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'spring-boot-actuator-user-agent-metrics'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'spring-boot-actuator-user-agent-metrics'
                description = 'Filter to log user agent statistics as spring boot actuator metrics'
                url = 'https://github.com/lukashinsch/spring-boot-actuator-user-agent-metrics'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'lukashinsch'
                        name = 'Lukas Hinsch'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:lukashinsch/spring-boot-actuator-user-agent-metrics.git'
                    url = 'https://github.com/lukashinsch/spring-boot-actuator-user-agent-metrics'
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    options.addBooleanOption('html5', true)
}